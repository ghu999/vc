{"ast":null,"code":"var _jsxFileName = \"/Users/granthu/VC Prototype/vc/audio-redaction-ui/frontend/src/components/AudioRedactionUI.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TranscriptDisplay = ({\n  transcript\n}) => {\n  _s();\n  const [selectedWords, setSelectedWords] = useState([]);\n  const handleWordClick = word => {\n    setSelectedWord(word);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: transcript.split(\" \").map((word, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => handleWordClick(word),\n        style: {\n          cursor: \"pointer\",\n          marginRight: \"5px\",\n          color: selectedWord === word ? \"blue\" : \"black\"\n        },\n        children: word\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), selectedWord && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected Word: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: selectedWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n// Example usage\n_s(TranscriptDisplay, \"eEDjz7dc3UBCEYRpSYFGbMTiebs=\");\n_c = TranscriptDisplay;\nconst App = () => {\n  _s2();\n  const [transcript, setTranscript] = useState(\"\");\n  useEffect(() => {\n    // Fetch the transcript from the Flask backend\n    fetch(\"http://127.0.0.1:5000/api/transcript\").then(response => response.json()).then(data => setTranscript(data.transcript)).catch(error => console.error(\"Error fetching transcript:\", error));\n  }, []);\n  if (!transcript) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading transcript...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transcript-container-scrollable\",\n    children: /*#__PURE__*/_jsxDEV(TranscriptDisplay, {\n      transcript: transcript\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 11\n  }, this);\n};\n_s2(App, \"Cd4SzhU1BeW8alRDfaqSf2s8kqY=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"TranscriptDisplay\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","TranscriptDisplay","transcript","_s","selectedWords","setSelectedWords","handleWordClick","word","setSelectedWord","children","split","map","index","onClick","style","cursor","marginRight","color","selectedWord","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s2","setTranscript","fetch","then","response","json","data","catch","error","console","className","_c2","$RefreshReg$"],"sources":["/Users/granthu/VC Prototype/vc/audio-redaction-ui/frontend/src/components/AudioRedactionUI.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"../App.css\";\n\nconst TranscriptDisplay = ({ transcript }) => {\n  const [selectedWords, setSelectedWords] = useState([]);\n\n  const handleWordClick = (word) => {\n    setSelectedWord(word);\n  };\n\n  return (\n    <div>\n      <p>\n        {transcript.split(\" \").map((word, index) => (\n          <span\n            key={index}\n            onClick={() => handleWordClick(word)}\n            style={{ cursor: \"pointer\", marginRight: \"5px\", color: selectedWord === word ? \"blue\" : \"black\" }}\n          >\n            {word}\n          </span>\n        ))}\n      </p>\n      {selectedWord && <p>Selected Word: <strong>{selectedWord}</strong></p>}\n    </div>\n  );\n};\n\n// Example usage\nconst App = () => {\n  const [transcript, setTranscript] = useState(\"\");\n\n  useEffect(() => {\n    // Fetch the transcript from the Flask backend\n    fetch(\"http://127.0.0.1:5000/api/transcript\")\n      .then((response) => response.json())\n      .then((data) => setTranscript(data.transcript))\n      .catch((error) => console.error(\"Error fetching transcript:\", error));\n  }, []);\n\n  if (!transcript) return <p>Loading transcript...</p>;\n\n  return (<div className=\"transcript-container-scrollable\">\n    <TranscriptDisplay transcript={transcript}></TranscriptDisplay>\n  </div>\n  );\n};\n\nexport default App;"],"mappings":";;;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMS,eAAe,GAAIC,IAAI,IAAK;IAChCC,eAAe,CAACD,IAAI,CAAC;EACvB,CAAC;EAED,oBACEP,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EACGP,UAAU,CAACQ,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAACJ,IAAI,EAAEK,KAAK,kBACrCZ,OAAA;QAEEa,OAAO,EAAEA,CAAA,KAAMP,eAAe,CAACC,IAAI,CAAE;QACrCO,KAAK,EAAE;UAAEC,MAAM,EAAE,SAAS;UAAEC,WAAW,EAAE,KAAK;UAAEC,KAAK,EAAEC,YAAY,KAAKX,IAAI,GAAG,MAAM,GAAG;QAAQ,CAAE;QAAAE,QAAA,EAEjGF;MAAI,GAJAK,KAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKN,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EACHJ,YAAY,iBAAIlB,OAAA;MAAAS,QAAA,GAAG,iBAAe,eAAAT,OAAA;QAAAS,QAAA,EAASS;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnE,CAAC;AAEV,CAAC;;AAED;AAAAnB,EAAA,CAzBMF,iBAAiB;AAAAsB,EAAA,GAAjBtB,iBAAiB;AA0BvB,MAAMuB,GAAG,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAChB,MAAM,CAACvB,UAAU,EAAEwB,aAAa,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA6B,KAAK,CAAC,sCAAsC,CAAC,CAC1CC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,aAAa,CAACK,IAAI,CAAC7B,UAAU,CAAC,CAAC,CAC9C8B,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;EACzE,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAAC/B,UAAU,EAAE,oBAAOF,OAAA;IAAAS,QAAA,EAAG;EAAqB;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEpD,oBAAQtB,OAAA;IAAKmC,SAAS,EAAC,iCAAiC;IAAA1B,QAAA,eACtDT,OAAA,CAACC,iBAAiB;MAACC,UAAU,EAAEA;IAAW;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAER,CAAC;AAACG,GAAA,CAjBID,GAAG;AAAAY,GAAA,GAAHZ,GAAG;AAmBT,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAa,GAAA;AAAAC,YAAA,CAAAd,EAAA;AAAAc,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}