{"ast":null,"code":"import{useState,useEffect,useRef}from\"react\";import\"../App.css\";import audio_path from\"../data/highlight-5300643.mp3\";//import redacted_path from \"../data/redacted_5300643.mp3\"\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const TranscriptDisplay=_ref=>{let{transcript,redactedAudio,setRedactedAudio}=_ref;const[selectedWords,setSelectedWords]=useState([]);const handleWordClick=word=>{if(selectedWords.includes(word)){// Deselect the word if it's already selected\nsetSelectedWords(selectedWords.filter(w=>w!==word));}else{// Select the word\nsetSelectedWords([...selectedWords,word]);}};const clearAll=()=>{setSelectedWords([]);};const audioRef=useRef();const updateSong=source=>{setRedactedAudio(source);if(audioRef.current){audioRef.current.pause();audioRef.current.load();audioRef.current.play();}};const redact=()=>{if(selectedWords.length===0){alert(\"Please select words to redact.\");return;}// Make a POST request to the backend to redact the selected words\nfetch(\"http://127.0.0.1:5000/api/redact\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({words:selectedWords})}).then(response=>{if(!response.ok){throw new Error(\"Failed to generate redacted audio.\");}return response.json();}).then(data=>{alert(\"Redacted audio successfully created!\");// Optionally, handle the redacted audio file path\n//setRedactedAudio(`http://localhost:9000${data.filePath}`);\nconst cacheBustedPath=\"http://localhost:9000\".concat(data.filePath,\"?t=\").concat(Date.now());alert(cacheBustedPath);setRedactedAudio(cacheBustedPath);updateSong(cacheBustedPath);console.log(\"Redacted audio file path:\",data.filePath);}).catch(error=>{console.error(\"Error during redaction:\",error);alert(\"An error occurred while redacting the audio. \".concat(error));});};return/*#__PURE__*/_jsxs(\"div\",{className:\"transcript-container-scrollable\",children:[/*#__PURE__*/_jsx(\"p\",{children:transcript&&transcript.split(\" \").map((word,index)=>/*#__PURE__*/_jsx(\"span\",{onClick:()=>handleWordClick(word),style:{cursor:\"pointer\",marginRight:\"5px\",color:selectedWords.includes(word)?\"blue\":\"black\",backgroundColor:selectedWords.includes(word)?\"#d0ebff\":\"transparent\",padding:\"2px 4px\",borderRadius:\"4px\"//wordWrap: \"normal\"\n},children:word},index))}),/*#__PURE__*/_jsx(\"h3\",{children:\"Transcript Audio\"}),/*#__PURE__*/_jsxs(\"audio\",{controls:true,children:[/*#__PURE__*/_jsx(\"source\",{src:audio_path,type:\"audio/mpeg\"}),\"Your browser does not support the audio element.\"]}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:\"10px\"},children:selectedWords.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Selected Words: \",/*#__PURE__*/_jsx(\"strong\",{children:selectedWords.join(\", \")})]}),/*#__PURE__*/_jsx(\"button\",{onClick:clearAll,style:{padding:\"6px 12px\",fontSize:\"14px\",backgroundColor:\"#ff4d4d\",color:\"white\",border:\"none\",borderRadius:\"4px\",cursor:\"pointer\"},children:\"Clear All\"}),/*#__PURE__*/_jsx(\"button\",{onClick:redact,style:{padding:\"6px 12px\",fontSize:\"14px\",backgroundColor:\"#ff4d4d\",color:\"white\",border:\"none\",borderRadius:\"4px\",cursor:\"pointer\"},children:\"Redact\"})]})}),redactedAudio&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Redacted Audio:\"}),/*#__PURE__*/_jsxs(\"audio\",{controls:true,ref:audioRef,children:[/*#__PURE__*/_jsx(\"source\",{src:redactedAudio,type:\"audio/mpeg\"}),\"Your browser does not support the audio element.\"]})]})]});};// Example usage\nconst AudioRedactionUI=()=>{const[transcript,setTranscript]=useState();const[redactedAudio,setRedactedAudio]=useState(null);useEffect(()=>{console.log(\"transcript changed...\",transcript?[0]:\"empty\");},[transcript]);useEffect(()=>{if(!transcript){// Fetch the transcript from the Flask backend\nfetch(\"http://127.0.0.1:5000/api/transcript\").then(response=>response.json()).then(data=>{setTranscript(data.transcript);console.log(data.transcript);}).catch(error=>console.error(\"Error fetching transcript:\",error));console.log(\"App::useEffect called...\");}},[transcript]);// if (!transcript) return <p>Loading transcript...</p>;\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"transcript-container-scrollable\",children:/*#__PURE__*/_jsx(TranscriptDisplay,{transcript:transcript,redactedAudio:redactedAudio,setRedactedAudio:setRedactedAudio})});};export default AudioRedactionUI;","map":{"version":3,"names":["useState","useEffect","useRef","audio_path","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TranscriptDisplay","_ref","transcript","redactedAudio","setRedactedAudio","selectedWords","setSelectedWords","handleWordClick","word","includes","filter","w","clearAll","audioRef","updateSong","source","current","pause","load","play","redact","length","alert","fetch","method","headers","body","JSON","stringify","words","then","response","ok","Error","json","data","cacheBustedPath","concat","filePath","Date","now","console","log","catch","error","className","children","split","map","index","onClick","style","cursor","marginRight","color","backgroundColor","padding","borderRadius","controls","src","type","marginTop","join","fontSize","border","ref","AudioRedactionUI","setTranscript"],"sources":["/Users/granthu/VC Prototype/vc/audio-redaction-ui/frontend/src/components/AudioRedactionUI.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport \"../App.css\";\nimport audio_path from \"../data/highlight-5300643.mp3\"\n//import redacted_path from \"../data/redacted_5300643.mp3\"\nconst TranscriptDisplay = ({ transcript, redactedAudio, setRedactedAudio }) => {\n  const [selectedWords, setSelectedWords] = useState([]);\n\n  const handleWordClick = (word) => {\n    if (selectedWords.includes(word)) {\n      // Deselect the word if it's already selected\n      setSelectedWords(selectedWords.filter((w) => w !== word));\n    } else {\n      // Select the word\n      setSelectedWords([...selectedWords, word]);\n    }\n  };\n\n  const clearAll = () => {\n    setSelectedWords([]);\n  }\n  const audioRef = useRef()\n  const updateSong = (source) => {\n    setRedactedAudio(source);\n    if (audioRef.current){\n      audioRef.current.pause()\n      audioRef.current.load();\n      audioRef.current.play();\n    }\n  }\n  const redact = () => {\n    if (selectedWords.length === 0) {\n      alert(\"Please select words to redact.\");\n      return;\n    }\n\n    // Make a POST request to the backend to redact the selected words\n    fetch(\"http://127.0.0.1:5000/api/redact\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ words: selectedWords }),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Failed to generate redacted audio.\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        alert(\"Redacted audio successfully created!\");\n        // Optionally, handle the redacted audio file path\n        //setRedactedAudio(`http://localhost:9000${data.filePath}`);\n        const cacheBustedPath = `http://localhost:9000${data.filePath}?t=${Date.now()}`;\n        alert(cacheBustedPath)\n        setRedactedAudio(cacheBustedPath)\n        updateSong(cacheBustedPath)\n        console.log(\"Redacted audio file path:\", data.filePath);\n      })\n      .catch((error) => {\n        console.error(\"Error during redaction:\", error);\n        alert(`An error occurred while redacting the audio. ${error}`);\n      });\n  };\n\n\n  return (\n    <div className=\"transcript-container-scrollable\">\n      <p>\n        {transcript && transcript.split(\" \").map((word, index) => (\n          <span\n            key={index}\n            onClick={() => handleWordClick(word)}\n            style={{\n              cursor: \"pointer\",\n              marginRight: \"5px\",\n              color: selectedWords.includes(word) ? \"blue\" : \"black\",\n              backgroundColor: selectedWords.includes(word) ? \"#d0ebff\" : \"transparent\",\n              padding: \"2px 4px\",\n              borderRadius: \"4px\",\n              //wordWrap: \"normal\"\n            }}\n          >\n            {word}\n          </span>\n        ))}\n      </p>\n      <h3>Transcript Audio</h3>\n      <audio controls>\n        <source src={audio_path} type=\"audio/mpeg\" />\n        Your browser does not support the audio element.\n      </audio>\n      <div style={{marginTop: \"10px\"}}>\n      {selectedWords.length > 0 && (\n        <>\n        <p>\n          Selected Words: <strong>{selectedWords.join(\", \")}</strong>\n          </p>\n          <button\n              onClick={clearAll}\n              style={{\n                padding: \"6px 12px\",\n                fontSize: \"14px\",\n                backgroundColor: \"#ff4d4d\",\n                color: \"white\",\n                border: \"none\",\n                borderRadius: \"4px\",\n                cursor: \"pointer\",\n              }}\n            >\n              Clear All\n            </button>\n            <button\n              onClick={redact}\n              style={{\n                padding: \"6px 12px\",\n                fontSize: \"14px\",\n                backgroundColor: \"#ff4d4d\",\n                color: \"white\",\n                border: \"none\",\n                borderRadius: \"4px\",\n                cursor: \"pointer\",\n              }}\n            >\n              Redact\n            </button>\n        </>\n        \n      )}\n      </div>\n       {/* Display the redacted audio */}\n{redactedAudio &&\n        <div>\n          <h3>Redacted Audio:</h3>\n          <audio controls ref={audioRef}>\n            <source src={redactedAudio} type=\"audio/mpeg\"/>\n            Your browser does not support the audio element.\n          </audio>\n        </div>\n}\n\n    </div>\n  );\n};\n\n// Example usage\nconst AudioRedactionUI = () => {\n  const [transcript, setTranscript] = useState();\n  const [redactedAudio, setRedactedAudio] = useState(null);\n\n  useEffect(() => {\n    console.log(\"transcript changed...\", transcript?[0] : \"empty\")\n  }, [transcript]);\n\n  useEffect(() => {\n    if (!transcript) {\n      // Fetch the transcript from the Flask backend\n      fetch(\"http://127.0.0.1:5000/api/transcript\")\n        .then((response) => response.json())\n        .then((data) => {\n          setTranscript(data.transcript);\n          console.log(data.transcript)\n        })\n        .catch((error) => console.error(\"Error fetching transcript:\", error));\n\n        console.log(\"App::useEffect called...\");\n    }\n  }, [transcript]);\n\n  // if (!transcript) return <p>Loading transcript...</p>;\n\n  return (<div className=\"transcript-container-scrollable\">\n    <TranscriptDisplay transcript={transcript} redactedAudio={redactedAudio} setRedactedAudio={setRedactedAudio}></TranscriptDisplay>\n  </div>\n  );\n};\n\nexport default AudioRedactionUI;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}