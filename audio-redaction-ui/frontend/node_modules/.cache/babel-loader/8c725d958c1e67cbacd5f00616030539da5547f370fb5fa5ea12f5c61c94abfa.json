{"ast":null,"code":"var _jsxFileName = \"/Users/granthu/VC Prototype/vc/audio-redaction-ui/frontend/src/components/AudioRedactionUI.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TranscriptDisplay = ({\n  transcript\n}) => {\n  _s();\n  const [selectedWords, setSelectedWords] = useState([]);\n  const audio_path = \"../../../testing/highlight-5300643.mp3\";\n  const handleWordClick = word => {\n    if (selectedWords.includes(word)) {\n      // Deselect the word if it's already selected\n      setSelectedWords(selectedWords.filter(w => w !== word));\n    } else {\n      // Select the word\n      setSelectedWords([...selectedWords, word]);\n    }\n  };\n  const clearAll = () => {\n    setSelectedWords([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transcript-container-scrollable\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: transcript.split(\" \").map((word, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => handleWordClick(word),\n        style: {\n          cursor: \"pointer\",\n          marginRight: \"5px\",\n          color: selectedWords.includes(word) ? \"blue\" : \"black\",\n          backgroundColor: selectedWords.includes(word) ? \"#d0ebff\" : \"transparent\",\n          padding: \"2px 4px\",\n          borderRadius: \"4px\"\n        },\n        children: word\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Transcript Audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: audio_path,\n        type: \"audio/mp3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), \"Your browser does not support the audio element.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      children: selectedWords.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Selected Words: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedWords.join(\", \")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearAll,\n          style: {\n            padding: \"6px 12px\",\n            fontSize: \"14px\",\n            backgroundColor: \"#ff4d4d\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\"\n          },\n          children: \"Clear All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n// Example usage\n_s(TranscriptDisplay, \"eEDjz7dc3UBCEYRpSYFGbMTiebs=\");\n_c = TranscriptDisplay;\nconst App = () => {\n  _s2();\n  const [transcript, setTranscript] = useState(\"\");\n  useEffect(() => {\n    // Fetch the transcript from the Flask backend\n    fetch(\"http://127.0.0.1:5000/api/transcript\").then(response => response.json()).then(data => setTranscript(data.transcript)).catch(error => console.error(\"Error fetching transcript:\", error));\n  }, []);\n  if (!transcript) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading transcript...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transcript-container-scrollable\",\n    children: /*#__PURE__*/_jsxDEV(TranscriptDisplay, {\n      transcript: transcript\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 11\n  }, this);\n};\n_s2(App, \"Cd4SzhU1BeW8alRDfaqSf2s8kqY=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"TranscriptDisplay\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","TranscriptDisplay","transcript","_s","selectedWords","setSelectedWords","audio_path","handleWordClick","word","includes","filter","w","clearAll","className","children","split","map","index","onClick","style","cursor","marginRight","color","backgroundColor","padding","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","controls","src","type","marginTop","length","join","fontSize","border","_c","App","_s2","setTranscript","fetch","then","response","json","data","catch","error","console","_c2","$RefreshReg$"],"sources":["/Users/granthu/VC Prototype/vc/audio-redaction-ui/frontend/src/components/AudioRedactionUI.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"../App.css\";\nconst TranscriptDisplay = ({ transcript }) => {\n  const [selectedWords, setSelectedWords] = useState([]);\n  const audio_path = \"../../../testing/highlight-5300643.mp3\"\n\n  const handleWordClick = (word) => {\n    if (selectedWords.includes(word)) {\n      // Deselect the word if it's already selected\n      setSelectedWords(selectedWords.filter((w) => w !== word));\n    } else {\n      // Select the word\n      setSelectedWords([...selectedWords, word]);\n    }\n  };\n\n  const clearAll = () => {\n    setSelectedWords([]);\n  }\n\n  return (\n    <div className=\"transcript-container-scrollable\">\n      <p>\n        {transcript.split(\" \").map((word, index) => (\n          <span\n            key={index}\n            onClick={() => handleWordClick(word)}\n            style={{\n              cursor: \"pointer\",\n              marginRight: \"5px\",\n              color: selectedWords.includes(word) ? \"blue\" : \"black\",\n              backgroundColor: selectedWords.includes(word) ? \"#d0ebff\" : \"transparent\",\n              padding: \"2px 4px\",\n              borderRadius: \"4px\",\n            }}\n          >\n            {word}\n          </span>\n        ))}\n      </p>\n      <h3>Transcript Audio</h3>\n      <audio controls>\n        <source src={audio_path} type=\"audio/mp3\" />\n        Your browser does not support the audio element.\n      </audio>\n      <div style={{marginTop: \"10px\"}}>\n      {selectedWords.length > 0 && (\n        <>\n        <p>\n          Selected Words: <strong>{selectedWords.join(\", \")}</strong>\n          </p>\n          <button\n              onClick={clearAll}\n              style={{\n                padding: \"6px 12px\",\n                fontSize: \"14px\",\n                backgroundColor: \"#ff4d4d\",\n                color: \"white\",\n                border: \"none\",\n                borderRadius: \"4px\",\n                cursor: \"pointer\",\n              }}\n            >\n              Clear All\n            </button>\n        </>\n        \n      )}\n      </div>\n    </div>\n  );\n};\n\n// Example usage\nconst App = () => {\n  const [transcript, setTranscript] = useState(\"\");\n\n  useEffect(() => {\n    // Fetch the transcript from the Flask backend\n    fetch(\"http://127.0.0.1:5000/api/transcript\")\n      .then((response) => response.json())\n      .then((data) => setTranscript(data.transcript))\n      .catch((error) => console.error(\"Error fetching transcript:\", error));\n  }, []);\n\n  if (!transcript) return <p>Loading transcript...</p>;\n\n  return (<div className=\"transcript-container-scrollable\">\n    <TranscriptDisplay transcript={transcript}></TranscriptDisplay>\n  </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}